From 59bb4642e2a8e99c31794333fe5b37386ac5faf7 Mon Sep 17 00:00:00 2001
From: Doug Semler <dougsemler@gmail.com>
Date: Wed, 14 Apr 2010 09:22:58 -0400
Subject: [PATCH 2/5] Fix PE-COFF archiving long name tables

Fixes the PE-COFF archive long name tables by creating a new set of
functions in the bfd library and using those functions when building
PE-COFF archives.  By default, the PE-COFF archive functions are defined
to be the normal COFF archive functions.

	* libbfd-in.h: Declare _bfd_archive_pecoff* functions.
	* libbfd.h: Regenerate.
	* archive.c (_bfd_archive_pecoff_construct_extended_name_table):
	  New.
	* coff-i386.c: Use PE-COFF archive functions when COFF_WITH_PE.
	* coff-ia64.c: Likewise.
	* coff-ppc.c: Likewise.
	* coff-sh.c: Likewise.
	* coff-x86_64.c: Likewise.
	* coffcode.h: Likewise.
	* pe-mips.c: Likewise.
---
 bfd/archive.c     |   28 ++++++++++
 bfd/coff-i386.c   |    6 ++-
 bfd/coff-ia64.c   |    6 ++-
 bfd/coff-ppc.c    |   10 +++-
 bfd/coff-sh.c     |   11 ++++-
 bfd/coff-x86_64.c |    4 ++
 bfd/coffcode.h    |  156 +++++++++++++++++++++++++++++++++++++++++++++++++++++
 bfd/libbfd-in.h   |   23 ++++++++
 bfd/libbfd.h      |   23 ++++++++
 bfd/pe-mips.c     |    6 ++-
 10 files changed, 268 insertions(+), 5 deletions(-)

diff --git a/bfd/archive.c b/bfd/archive.c
index e6c1e83..a94c2c1 100644
--- a/bfd/archive.c
+++ b/bfd/archive.c
@@ -1403,6 +1403,34 @@ _bfd_archive_coff_construct_extended_name_table (bfd *abfd,
   return _bfd_construct_extended_name_table (abfd, TRUE, tabloc, tablen);
 }
 
+/* PE-COFF long filenames are null terminated, not "/\012", which is
+   what the coff archiver function does.  So we call general function
+   without asking for terminating slashes.  Then, we replace
+   all of the '\012' characters with '\0'.
+   Information obtained from the PE-COFF Specification version 8.1,
+   section 7.5 on the Longnames member. */
+
+bfd_boolean
+_bfd_archive_pecoff_construct_extended_name_table (bfd *abfd,
+						   char **tabloc,
+						   bfd_size_type *tablen,
+						   const char **name)
+{
+  bfd_size_type i;
+  char *strptr;
+  *name = "//";
+  if (! _bfd_construct_extended_name_table (abfd, FALSE, tabloc, tablen))
+    return FALSE;
+
+  strptr = *tabloc;
+  for (i = 0; i < *tablen; ++ i)
+    {
+      if (strptr[i] == ARFMAG[1])
+        strptr[i] = '\0';
+    }
+  return TRUE;
+}
+
 /* Follows archive_head and produces an extended name table if
    necessary.  Returns (in tabloc) a pointer to an extended name
    table, and in tablen the length of the table.  If it makes an entry
diff --git a/bfd/coff-i386.c b/bfd/coff-i386.c
index 57c47d0..ee191b2 100644
--- a/bfd/coff-i386.c
+++ b/bfd/coff-i386.c
@@ -1,6 +1,6 @@
 /* BFD back-end for Intel 386 COFF files.
    Copyright 1990, 1991, 1992, 1993, 1994, 1995, 1996, 1997, 1998, 1999,
-   2000, 2001, 2002, 2003, 2004, 2005, 2007, 2008, 2009
+   2000, 2001, 2002, 2003, 2004, 2005, 2007, 2008, 2009, 2010
    Free Software Foundation, Inc.
    Written by Cygnus Support.
 
@@ -680,7 +680,11 @@ const bfd_target
      BFD_JUMP_TABLE_GENERIC (coff),
      BFD_JUMP_TABLE_COPY (coff),
      BFD_JUMP_TABLE_CORE (_bfd_nocore),
+#ifndef COFF_WITH_PE
      BFD_JUMP_TABLE_ARCHIVE (_bfd_archive_coff),
+#else
+     BFD_JUMP_TABLE_ARCHIVE (_bfd_archive_pecoff),
+#endif
      BFD_JUMP_TABLE_SYMBOLS (coff),
      BFD_JUMP_TABLE_RELOCS (coff),
      BFD_JUMP_TABLE_WRITE (coff),
diff --git a/bfd/coff-ia64.c b/bfd/coff-ia64.c
index 38d9ac6..d0c52ae 100644
--- a/bfd/coff-ia64.c
+++ b/bfd/coff-ia64.c
@@ -1,5 +1,5 @@
 /* BFD back-end for HP/Intel IA-64 COFF files.
-   Copyright 1999, 2000, 2001, 2002, 2005, 2007, 2008, 2009
+   Copyright 1999, 2000, 2001, 2002, 2005, 2007, 2008, 2009, 2010
    Free Software Foundation, Inc.
    Contributed by David Mosberger <davidm@hpl.hp.com>
 
@@ -195,7 +195,11 @@ const bfd_target
      BFD_JUMP_TABLE_GENERIC (coff),
      BFD_JUMP_TABLE_COPY (coff),
      BFD_JUMP_TABLE_CORE (_bfd_nocore),
+#ifndef COFF_WITH_PE
      BFD_JUMP_TABLE_ARCHIVE (_bfd_archive_coff),
+#else
+     BFD_JUMP_TABLE_ARCHIVE (_bfd_archive_pecoff),
+#endif
      BFD_JUMP_TABLE_SYMBOLS (coff),
      BFD_JUMP_TABLE_RELOCS (coff),
      BFD_JUMP_TABLE_WRITE (coff),
diff --git a/bfd/coff-ppc.c b/bfd/coff-ppc.c
index 307b7c7..9245d1d 100644
--- a/bfd/coff-ppc.c
+++ b/bfd/coff-ppc.c
@@ -1,6 +1,6 @@
 /* BFD back-end for PowerPC Microsoft Portable Executable files.
    Copyright 1990, 1991, 1992, 1993, 1994, 1995, 1996, 1997, 1998, 1999,
-   2000, 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009
+   2000, 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010
    Free Software Foundation, Inc.
 
    Original version pieced together by Kim Knuttila (krk@cygnus.com)
@@ -2617,7 +2617,11 @@ const bfd_target TARGET_LITTLE_SYM =
   BFD_JUMP_TABLE_GENERIC (coff),
   BFD_JUMP_TABLE_COPY (coff),
   BFD_JUMP_TABLE_CORE (_bfd_nocore),
+#ifndef COFF_WITH_PE
   BFD_JUMP_TABLE_ARCHIVE (_bfd_archive_coff),
+#else
+  BFD_JUMP_TABLE_ARCHIVE (_bfd_archive_pecoff),
+#endif
   BFD_JUMP_TABLE_SYMBOLS (coff),
   BFD_JUMP_TABLE_RELOCS (coff),
   BFD_JUMP_TABLE_WRITE (coff),
@@ -2676,7 +2680,11 @@ const bfd_target TARGET_BIG_SYM =
   BFD_JUMP_TABLE_GENERIC (coff),
   BFD_JUMP_TABLE_COPY (coff),
   BFD_JUMP_TABLE_CORE (_bfd_nocore),
+#ifndef COFF_WITH_PE
   BFD_JUMP_TABLE_ARCHIVE (_bfd_archive_coff),
+#else
+  BFD_JUMP_TABLE_ARCHIVE (_bfd_archive_pecoff),
+#endif
   BFD_JUMP_TABLE_SYMBOLS (coff),
   BFD_JUMP_TABLE_RELOCS (coff),
   BFD_JUMP_TABLE_WRITE (coff),
diff --git a/bfd/coff-sh.c b/bfd/coff-sh.c
index 28ac0ab..93b4f6e 100644
--- a/bfd/coff-sh.c
+++ b/bfd/coff-sh.c
@@ -1,6 +1,7 @@
 /* BFD back-end for Renesas Super-H COFF binaries.
    Copyright 1993, 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
-   2003, 2004, 2005, 2006, 2007, 2008, 2009  Free Software Foundation, Inc.
+   2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010
+   Free Software Foundation, Inc.
    Contributed by Cygnus Support.
    Written by Steve Chamberlain, <sac@cygnus.com>.
    Relaxing code written by Ian Lance Taylor, <ian@cygnus.com>.
@@ -3201,7 +3202,11 @@ const bfd_target shcoff_small_vec =
   BFD_JUMP_TABLE_GENERIC (coff_small),
   BFD_JUMP_TABLE_COPY (coff),
   BFD_JUMP_TABLE_CORE (_bfd_nocore),
+#ifndef COFF_WITH_PE
   BFD_JUMP_TABLE_ARCHIVE (_bfd_archive_coff),
+#else
+  BFD_JUMP_TABLE_ARCHIVE (_bfd_archive_pecoff),
+#endif
   BFD_JUMP_TABLE_SYMBOLS (coff),
   BFD_JUMP_TABLE_RELOCS (coff),
   BFD_JUMP_TABLE_WRITE (coff),
@@ -3245,7 +3250,11 @@ const bfd_target shlcoff_small_vec =
   BFD_JUMP_TABLE_GENERIC (coff_small),
   BFD_JUMP_TABLE_COPY (coff),
   BFD_JUMP_TABLE_CORE (_bfd_nocore),
+#ifndef COFF_WITH_PE
   BFD_JUMP_TABLE_ARCHIVE (_bfd_archive_coff),
+#else
+  BFD_JUMP_TABLE_ARCHIVE (_bfd_archive_pecoff),
+#endif
   BFD_JUMP_TABLE_SYMBOLS (coff),
   BFD_JUMP_TABLE_RELOCS (coff),
   BFD_JUMP_TABLE_WRITE (coff),
diff --git a/bfd/coff-x86_64.c b/bfd/coff-x86_64.c
index 8083d97..7ae721f 100644
--- a/bfd/coff-x86_64.c
+++ b/bfd/coff-x86_64.c
@@ -781,7 +781,11 @@ const bfd_target
   BFD_JUMP_TABLE_GENERIC (coff),
   BFD_JUMP_TABLE_COPY (coff),
   BFD_JUMP_TABLE_CORE (_bfd_nocore),
+#ifndef COFF_WITH_PE
   BFD_JUMP_TABLE_ARCHIVE (_bfd_archive_coff),
+#else
+  BFD_JUMP_TABLE_ARCHIVE (_bfd_archive_pecoff),
+#endif
   BFD_JUMP_TABLE_SYMBOLS (coff),
   BFD_JUMP_TABLE_RELOCS (coff),
   BFD_JUMP_TABLE_WRITE (coff),
diff --git a/bfd/coffcode.h b/bfd/coffcode.h
index 1cf2b4e..3759d91 100644
--- a/bfd/coffcode.h
+++ b/bfd/coffcode.h
@@ -5635,6 +5635,10 @@ static bfd_coff_backend_data ticoff1_swap_table =
 #define coff_bfd_define_common_symbol	    bfd_generic_define_common_symbol
 #endif
 
+/* Define the PE-COFF generators with the correct tables. */
+
+#ifndef COFF_WITH_PE
+
 #define CREATE_BIG_COFF_TARGET_VEC(VAR, NAME, EXTRA_O_FLAGS, EXTRA_S_FLAGS, UNDER, ALTERNATIVE, SWAP_TABLE)	\
 const bfd_target VAR =							\
 {									\
@@ -5782,3 +5786,155 @@ const bfd_target VAR =							\
 									\
   SWAP_TABLE								\
 };
+
+#else /* COFF_WITH_PE */
+
+#define CREATE_BIG_COFF_TARGET_VEC(VAR, NAME, EXTRA_O_FLAGS, EXTRA_S_FLAGS, UNDER, ALTERNATIVE, SWAP_TABLE)	\
+const bfd_target VAR =							\
+{									\
+  NAME ,								\
+  bfd_target_coff_flavour,						\
+  BFD_ENDIAN_BIG,		/* Data byte order is big.  */		\
+  BFD_ENDIAN_BIG,		/* Header byte order is big.  */	\
+  /* object flags */							\
+  (HAS_RELOC | EXEC_P | HAS_LINENO | HAS_DEBUG |			\
+   HAS_SYMS | HAS_LOCALS | WP_TEXT | EXTRA_O_FLAGS),			\
+  /* section flags */							\
+  (SEC_HAS_CONTENTS | SEC_ALLOC | SEC_LOAD | SEC_RELOC | EXTRA_S_FLAGS),\
+  UNDER,			/* Leading symbol underscore.  */	\
+  '/',				/* AR_pad_char.  */			\
+  15,				/* AR_max_namelen.  */			\
+									\
+  /* Data conversion functions.  */					\
+  bfd_getb64, bfd_getb_signed_64, bfd_putb64,				\
+  bfd_getb32, bfd_getb_signed_32, bfd_putb32,				\
+  bfd_getb16, bfd_getb_signed_16, bfd_putb16,				\
+									\
+  /* Header conversion functions.  */					\
+  bfd_getb64, bfd_getb_signed_64, bfd_putb64,				\
+  bfd_getb32, bfd_getb_signed_32, bfd_putb32,				\
+  bfd_getb16, bfd_getb_signed_16, bfd_putb16,				\
+									\
+	/* bfd_check_format.  */					\
+  { _bfd_dummy_target, coff_object_p, bfd_generic_archive_p,		\
+    _bfd_dummy_target },						\
+	/* bfd_set_format.  */						\
+  { bfd_false, coff_mkobject, _bfd_generic_mkarchive, bfd_false },	\
+	/* bfd_write_contents.  */					\
+  { bfd_false, coff_write_object_contents, _bfd_write_archive_contents,	\
+    bfd_false },							\
+									\
+  BFD_JUMP_TABLE_GENERIC (coff),					\
+  BFD_JUMP_TABLE_COPY (coff),						\
+  BFD_JUMP_TABLE_CORE (_bfd_nocore),					\
+  BFD_JUMP_TABLE_ARCHIVE (_bfd_archive_pecoff),				\
+  BFD_JUMP_TABLE_SYMBOLS (coff),					\
+  BFD_JUMP_TABLE_RELOCS (coff),						\
+  BFD_JUMP_TABLE_WRITE (coff),						\
+  BFD_JUMP_TABLE_LINK (coff),						\
+  BFD_JUMP_TABLE_DYNAMIC (_bfd_nodynamic),				\
+									\
+  ALTERNATIVE,								\
+									\
+  SWAP_TABLE								\
+};
+
+#define CREATE_BIGHDR_COFF_TARGET_VEC(VAR, NAME, EXTRA_O_FLAGS, EXTRA_S_FLAGS, UNDER, ALTERNATIVE, SWAP_TABLE)	\
+const bfd_target VAR =							\
+{									\
+  NAME ,								\
+  bfd_target_coff_flavour,						\
+  BFD_ENDIAN_LITTLE,		/* Data byte order is little.  */	\
+  BFD_ENDIAN_BIG,		/* Header byte order is big.  */	\
+  /* object flags */							\
+  (HAS_RELOC | EXEC_P | HAS_LINENO | HAS_DEBUG |			\
+   HAS_SYMS | HAS_LOCALS | WP_TEXT | EXTRA_O_FLAGS),			\
+  /* section flags */							\
+  (SEC_HAS_CONTENTS | SEC_ALLOC | SEC_LOAD | SEC_RELOC | EXTRA_S_FLAGS),\
+  UNDER,			/* Leading symbol underscore.  */	\
+  '/',				/* AR_pad_char.  */			\
+  15,				/* AR_max_namelen.  */			\
+									\
+  /* Data conversion functions.  */					\
+  bfd_getb64, bfd_getb_signed_64, bfd_putb64,				\
+  bfd_getb32, bfd_getb_signed_32, bfd_putb32,				\
+  bfd_getb16, bfd_getb_signed_16, bfd_putb16,				\
+									\
+  /* Header conversion functions.  */					\
+  bfd_getb64, bfd_getb_signed_64, bfd_putb64,				\
+  bfd_getb32, bfd_getb_signed_32, bfd_putb32,				\
+  bfd_getb16, bfd_getb_signed_16, bfd_putb16,				\
+									\
+	/* bfd_check_format.  */					\
+  { _bfd_dummy_target, coff_object_p, bfd_generic_archive_p,		\
+    _bfd_dummy_target },						\
+	/* bfd_set_format.  */						\
+  { bfd_false, coff_mkobject, _bfd_generic_mkarchive, bfd_false },	\
+	/* bfd_write_contents.  */					\
+  { bfd_false, coff_write_object_contents, _bfd_write_archive_contents,	\
+    bfd_false },							\
+									\
+  BFD_JUMP_TABLE_GENERIC (coff),					\
+  BFD_JUMP_TABLE_COPY (coff),						\
+  BFD_JUMP_TABLE_CORE (_bfd_nocore),					\
+  BFD_JUMP_TABLE_ARCHIVE (_bfd_archive_pecoff),				\
+  BFD_JUMP_TABLE_SYMBOLS (coff),					\
+  BFD_JUMP_TABLE_RELOCS (coff),						\
+  BFD_JUMP_TABLE_WRITE (coff),						\
+  BFD_JUMP_TABLE_LINK (coff),						\
+  BFD_JUMP_TABLE_DYNAMIC (_bfd_nodynamic),				\
+									\
+  ALTERNATIVE,								\
+									\
+  SWAP_TABLE								\
+};
+
+#define CREATE_LITTLE_COFF_TARGET_VEC(VAR, NAME, EXTRA_O_FLAGS, EXTRA_S_FLAGS, UNDER, ALTERNATIVE, SWAP_TABLE)	\
+const bfd_target VAR =							\
+{									\
+  NAME ,								\
+  bfd_target_coff_flavour,						\
+  BFD_ENDIAN_LITTLE,		/* Data byte order is little.  */	\
+  BFD_ENDIAN_LITTLE,		/* Header byte order is little.  */	\
+	/* object flags */						\
+  (HAS_RELOC | EXEC_P | HAS_LINENO | HAS_DEBUG |			\
+   HAS_SYMS | HAS_LOCALS | WP_TEXT | EXTRA_O_FLAGS),			\
+	/* section flags */						\
+  (SEC_HAS_CONTENTS | SEC_ALLOC | SEC_LOAD | SEC_RELOC | EXTRA_S_FLAGS),\
+  UNDER,			/* Leading symbol underscore.  */	\
+  '/',				/* AR_pad_char.  */			\
+  15,				/* AR_max_namelen.  */			\
+									\
+  /* Data conversion functions.  */					\
+  bfd_getl64, bfd_getl_signed_64, bfd_putl64,				\
+  bfd_getl32, bfd_getl_signed_32, bfd_putl32,				\
+  bfd_getl16, bfd_getl_signed_16, bfd_putl16,				\
+  /* Header conversion functions.  */					\
+  bfd_getl64, bfd_getl_signed_64, bfd_putl64,				\
+  bfd_getl32, bfd_getl_signed_32, bfd_putl32,				\
+  bfd_getl16, bfd_getl_signed_16, bfd_putl16,				\
+	/* bfd_check_format.  */					\
+  { _bfd_dummy_target, coff_object_p, bfd_generic_archive_p,		\
+    _bfd_dummy_target },						\
+       /* bfd_set_format.  */						\
+  { bfd_false, coff_mkobject, _bfd_generic_mkarchive, bfd_false },	\
+	/* bfd_write_contents.  */					\
+  { bfd_false, coff_write_object_contents, _bfd_write_archive_contents,	\
+    bfd_false },							\
+									\
+  BFD_JUMP_TABLE_GENERIC (coff),					\
+  BFD_JUMP_TABLE_COPY (coff),						\
+  BFD_JUMP_TABLE_CORE (_bfd_nocore),					\
+  BFD_JUMP_TABLE_ARCHIVE (_bfd_archive_pecoff),				\
+  BFD_JUMP_TABLE_SYMBOLS (coff),					\
+  BFD_JUMP_TABLE_RELOCS (coff),						\
+  BFD_JUMP_TABLE_WRITE (coff),						\
+  BFD_JUMP_TABLE_LINK (coff),						\
+  BFD_JUMP_TABLE_DYNAMIC (_bfd_nodynamic),				\
+									\
+  ALTERNATIVE,								\
+									\
+  SWAP_TABLE								\
+};
+
+#endif /* COFF_WITH_PE */
diff --git a/bfd/libbfd-in.h b/bfd/libbfd-in.h
index 5e636a3..760ab69 100644
--- a/bfd/libbfd-in.h
+++ b/bfd/libbfd-in.h
@@ -333,6 +333,29 @@ extern bfd_boolean _bfd_archive_coff_construct_extended_name_table
   bfd_generic_stat_arch_elt
 #define _bfd_archive_coff_update_armap_timestamp bfd_true
 
+/* Routines to use for BFD_JUMP_TABLE_ARCHIVE to get PE-COFF style
+   archives.  Use BFD_JUMP_TABLE_ARCHIVE (_bfd_archive_pecoff).
+   Unless overridden, they default to the COFF functions.  */
+
+#define _bfd_archive_pecoff_slurp_armap _bfd_archive_coff_slurp_armap
+#define _bfd_archive_pecoff_slurp_extended_name_table \
+  _bfd_archive_coff_slurp_extended_name_table
+extern bfd_boolean _bfd_archive_pecoff_construct_extended_name_table
+  (bfd *, char **, bfd_size_type *, const char **);
+#define _bfd_archive_pecoff_truncate_arname \
+  _bfd_archive_coff_truncate_arname
+#define _bfd_archive_pecoff_write_armap _bfd_archive_coff_write_armap
+#define _bfd_archive_pecoff_read_ar_hdr _bfd_archive_coff_read_ar_hdr
+#define _bfd_archive_pecoff_write_ar_hdr _bfd_archive_coff_write_ar_hdr
+#define _bfd_archive_pecoff_openr_next_archived_file \
+  _bfd_archive_coff_openr_next_archived_file
+#define _bfd_archive_pecoff_get_elt_at_index \
+  _bfd_archive_coff_get_elt_at_index
+#define _bfd_archive_pecoff_generic_stat_arch_elt \
+  _bfd_archive_coff_generic_stat_arch_elt
+#define _bfd_archive_pecoff_update_armap_timestamp \
+  _bfd_archive_coff_update_armap_timestamp
+
 /* Routines to use for BFD_JUMP_TABLE_ARCHIVE to get BSD4.4 style
    archives.  Use BFD_JUMP_TABLE_ARCHIVE (_bfd_archive_bsd44).  */
 
diff --git a/bfd/libbfd.h b/bfd/libbfd.h
index 7275dd9..a4b7f24 100644
--- a/bfd/libbfd.h
+++ b/bfd/libbfd.h
@@ -338,6 +338,29 @@ extern bfd_boolean _bfd_archive_coff_construct_extended_name_table
   bfd_generic_stat_arch_elt
 #define _bfd_archive_coff_update_armap_timestamp bfd_true
 
+/* Routines to use for BFD_JUMP_TABLE_ARCHIVE to get PE-COFF style
+   archives.  Use BFD_JUMP_TABLE_ARCHIVE (_bfd_archive_pecoff).
+   Unless overridden, they default to the COFF functions.  */
+
+#define _bfd_archive_pecoff_slurp_armap _bfd_archive_coff_slurp_armap
+#define _bfd_archive_pecoff_slurp_extended_name_table \
+  _bfd_archive_coff_slurp_extended_name_table
+extern bfd_boolean _bfd_archive_pecoff_construct_extended_name_table
+  (bfd *, char **, bfd_size_type *, const char **);
+#define _bfd_archive_pecoff_truncate_arname \
+  _bfd_archive_coff_truncate_arname
+#define _bfd_archive_pecoff_write_armap _bfd_archive_coff_write_armap
+#define _bfd_archive_pecoff_read_ar_hdr _bfd_archive_coff_read_ar_hdr
+#define _bfd_archive_pecoff_write_ar_hdr _bfd_archive_coff_write_ar_hdr
+#define _bfd_archive_pecoff_openr_next_archived_file \
+  _bfd_archive_coff_openr_next_archived_file
+#define _bfd_archive_pecoff_get_elt_at_index \
+  _bfd_archive_coff_get_elt_at_index
+#define _bfd_archive_pecoff_generic_stat_arch_elt \
+  _bfd_archive_coff_generic_stat_arch_elt
+#define _bfd_archive_pecoff_update_armap_timestamp \
+  _bfd_archive_coff_update_armap_timestamp
+
 /* Routines to use for BFD_JUMP_TABLE_ARCHIVE to get BSD4.4 style
    archives.  Use BFD_JUMP_TABLE_ARCHIVE (_bfd_archive_bsd44).  */
 
diff --git a/bfd/pe-mips.c b/bfd/pe-mips.c
index 31b87f4..e1b5bd6 100644
--- a/bfd/pe-mips.c
+++ b/bfd/pe-mips.c
@@ -1,6 +1,6 @@
 /* BFD back-end for MIPS PE COFF files.
    Copyright 1990, 1991, 1992, 1993, 1994, 1995, 1996, 1997, 1998, 1999,
-   2000, 2001, 2002, 2003, 2004, 2005, 2007, 2008, 2009
+   2000, 2001, 2002, 2003, 2004, 2005, 2007, 2008, 2009, 2010
    Free Software Foundation, Inc.
    Modified from coff-i386.c by DJ Delorie, dj@cygnus.com
 
@@ -919,7 +919,11 @@ const bfd_target
   BFD_JUMP_TABLE_GENERIC (coff),
   BFD_JUMP_TABLE_COPY (coff),
   BFD_JUMP_TABLE_CORE (_bfd_nocore),
+#ifndef COFF_WITH_PE
   BFD_JUMP_TABLE_ARCHIVE (_bfd_archive_coff),
+#else
+  BFD_JUMP_TABLE_ARCHIVE (_bfd_archive_pecoff),
+#endif
   BFD_JUMP_TABLE_SYMBOLS (coff),
   BFD_JUMP_TABLE_RELOCS (coff),
   BFD_JUMP_TABLE_WRITE (coff),
-- 
1.7.0.3.254.g4503b

